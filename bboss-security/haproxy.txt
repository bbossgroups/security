ps -ef | grep /opt/env/apache-tomcat-7.0.54/bin | awk '{print $2}' | xargs kill -9 
首先从以下站点下载最新版本的haproxy
https://haproxy.1wt.eu/
解压haproxy-ss-20140519.tar.gz
tar -xf haproxy-ss-20140519.tar.gz
编译和安装haproxy
make TARGET=linux26 PREFIX=/usr/local/haproxy install
mkdir /etc/haproxy
#cp examples/haproxy.cfg  /etc/haproxy
cp /usr/local/haproxy/haproxy.cfg /etc/haproxy
cp /opt/haproxy/haproxy-1.5-dev25/examples/haproxy.init  /etc/init.d/haproxy
chmod +x /etc/init.d/haproxy
ln -s /usr/local/haproxy/sbin/haproxy /usr/sbin/
keepalived安装：
http://www.keepalived.org/
keepalived.conf配置：

! Configuration File for keepalived

global_defs {
   notification_email {
     yin-bp@163.com
   }
   notification_email_from yin-bp@163.com
   smtp_server smtp.163.com
   smtp_connect_timeout 30
   router_id LVS_DEVEL
}

vrrp_instance VI_1 {
    interface eth0
    virtual_router_id 51
    priority 160
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        10.0.15.222 
    }
}

vrrp_instance VI_2 {
    interface eth0
    virtual_router_id 52
    priority 150
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        10.0.15.223
    }
}



cp /usr/local/keepalived/sbin/keepalived /usr/sbin/
cp /usr/local/keepalived/etc/sysconfig/keepalived /etc/sysconfig/
cp /usr/local/keepalived/etc/rc.d/init.d/keepalived /etc/init.d/
mkdir /etc/keepalived
cp /usr/local/keepalived/etc/keepalived/keepalived.conf  /etc/keepalived/
启动keepalived
 ./keepalived -f /usr/local/keepalived/etc/keepalived/keepalived.conf
service keepalived start|restart|stop 
 tail -f /var/log/messages
1.启动haproxy
cd /usr/local/haproxy/sbin/
./haproxy -f /usr/local/haproxy/haproxy.cfg
service haproxy start|restart|stop

2.配置haproxy
/usr/local/haproxy/haproxy.cfg

    # The same configuration defined with a single listen block. Shorter but
    # less expressive, especially in HTTP mode.
    global
        daemon
        maxconn 4096

    defaults
        mode http
        balance roundrobin
        timeout connect 5000ms
        timeout client 50000ms
        timeout server 50000ms
			
    listen http-in
       bind *:80
       option httpchk GET /sPDP/detail.html HTTP/1.1
       server webA 10.0.15.38:9081
       server webB 10.25.192.142:8080 
       maxconn 4096
       
       
global
    log         127.0.0.1 local2

    chroot      /usr/local/haproxy
    pidfile     /usr/local/logs/haproxy.pid
    maxconn     4000
    daemon

    # turn on stats unix socket
    stats socket /usr/local/stats

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main *:80
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#   acl url_static       path_end       -i .jpg .gif .png .css .js
#    use_backend static          if url_static

    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------

#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend app
    balance     roundrobin
#	option httpchk GET /index.html
	option httpchk HEAD /sPDP/detail.html
#    server  app1 192.168.137.128:80 check
#    server  app2 192.168.137.129:80 check
	server  s1 10.0.15.38:9081  cookie 1 weight 1 check inter 5s rise 2 fall 3
	server  s2 10.25.192.142:8080 cookie 1 weight 1 check inter 5s rise 2 fall 3
#	server  s3 192.168.148.110:8081 cookie 1 weight 1 check inter 5s rise 2 fall 3

#    server  app3 127.0.0.1:5003 check
#    server  app4 127.0.0.1:5004 check
listen tatus
    bind *:1158                
    mode http                        
    stats refresh 10s 
    stats uri /haproxy 
    stats realm Haproxy\ Statistics
    stats auth admin:admin
    stats hide-version 
stats admin if TRUE

server

vip1 10.0.15.222
vip2 10.0.15.223

haproxy1 10.0.15.137
haproxy2 10.0.15.138

web1 10.0.15.134
web2 10.0.15.38
web3 10.0.15.137
web4 10.0.15.138
web5 10.0.15.141
web6 10.0.15.231
			 